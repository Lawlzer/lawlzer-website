@import 'tailwindcss';
/* @plugin 'tailwindcss-animate'; - Removed, now configured in postcss.config.mjs */

/* Define custom dark variant based on .dark class (Keep if needed for manual toggle, otherwise remove) */
/* @custom-variant dark (&:where(.dark, .dark *)); */ /* Commenting out for now, focusing on prefers-color-scheme */

/* Define theme variables using standard CSS custom properties */
:root {
	/* Light Mode Defaults (from PREDEFINED_PALETTES['Light Mode']) */
	--page-background: #ffffff;
	--primary-text-color: #111827;
	--primary-color: #3c33e6;
	--secondary-colour: #f2f2f2; /* Mapped from SECONDARY_COLOR */
	--secondary-text-color: #6b7280;
	--custom-border-color: #e5e7eb;

	/* Default derived/semantic colors (Light Mode) */
	--primary-foreground-color: #ffffff; /* White text on primary blue */
	--secondary-foreground-color: #111827; /* Dark text on secondary light gray */
	--muted-foreground-color: #6b7280; /* Standard secondary text color */
	--accent-foreground-color: #ffffff; /* White text on primary blue accent */
	--destructive-color: #ef4444; /* Tailwind red-500 */
	--destructive-foreground-color: #ffffff; /* White */
	--ring-color: #6366f1; /* Tailwind indigo-500 (adjust as needed) */
	--popover-background: #ffffff; /* Same as page background */
	--popover-foreground-color: #111827; /* Same as primary text */

	/* Map semantic colors to Tailwind CSS variables */
	--background: var(--page-background);
	--foreground: var(--primary-text-color);
	--card: var(--page-background);
	--card-foreground: var(--primary-text-color);
	--popover: var(--popover-background);
	--popover-foreground: var(--popover-foreground-color);
	--primary: var(--primary-color);
	--primary-foreground: var(--primary-foreground-color);
	--secondary: var(--secondary-colour);
	--secondary-foreground: var(--secondary-foreground-color);
	--muted: var(--secondary-colour);
	--muted-foreground: var(--muted-foreground-color);
	--accent: var(--primary-color);
	--accent-foreground: var(--accent-foreground-color);
	--destructive: var(--destructive-color);
	--destructive-foreground: var(--destructive-foreground-color);
	--border: var(--custom-border-color);
	--input: var(--secondary-colour); /* Input background often matches secondary/muted */
	--ring: var(--ring-color);
	--secondary-text: var(--secondary-text-color); /* Explicit variable for secondary text */

	--radius: 0.5rem;
}

@media (prefers-color-scheme: dark) {
	:root {
		/* Dark Mode Defaults (from PREDEFINED_PALETTES['Dark Mode']) */
		--page-background: #1f2937;
		--primary-text-color: #f9fafb;
		--primary-color: #818cf8;
		--secondary-colour: #374151; /* Mapped from SECONDARY_COLOR */
		--secondary-text-color: #9ca3af;
		--custom-border-color: #4b5563;

		/* Default derived/semantic colors (Dark Mode) */
		--primary-foreground-color: #1f2937; /* Dark text on primary light purple */
		--secondary-foreground-color: #f9fafb; /* Light text on secondary dark gray */
		--muted-foreground-color: #9ca3af; /* Standard secondary text color */
		--accent-foreground-color: #1f2937; /* Dark text on primary light purple accent */
		--destructive-color: #f87171; /* Tailwind red-400 */
		--destructive-foreground-color: #ffffff; /* White */
		--ring-color: #a5b4fc; /* Tailwind indigo-300 (adjust as needed) */
		--popover-background: #374151; /* Darker background for popovers */
		--popover-foreground-color: #f9fafb; /* Light text */

		/* Tailwind variable mappings will inherit from :root unless overridden here */
		/* Most mappings are likely okay, but check if any need specific dark mode overrides */
		/* Example: --input might use a slightly different shade in dark mode */
		/* --input: #4b5563; */ /* If needed */
	}
}

/* Define utilities based on theme variables for use with @apply */
/* Keep these as they map Tailwind concepts to our CSS variables */
@utility bg-background {
	@apply bg-[var(--background)];
}
@utility text-foreground {
	@apply text-[var(--foreground)];
}
@utility border-border {
	@apply border-[var(--border)];
}
@utility text-primary {
	@apply text-[var(--primary)];
}
@utility bg-secondary {
	@apply bg-[var(--secondary)];
}
@utility text-secondary-foreground {
	@apply text-[var(--secondary-foreground)];
}
@utility text-muted-foreground {
	@apply text-[var(--muted-foreground)];
}
@utility bg-primary {
	@apply bg-[var(--primary)];
}
@utility text-primary-foreground {
	@apply text-[var(--primary-foreground)];
}
@utility ring-ring {
	@apply ring-[var(--ring)];
}
@utility bg-popover {
	@apply bg-[var(--popover)];
}
@utility text-popover-foreground {
	@apply text-[var(--popover-foreground)];
}
@utility divide-border {
	@apply divide-[var(--border)];
}
@utility bg-accent {
	@apply bg-[var(--accent)];
}
@utility text-accent-foreground {
	@apply text-[var(--accent-foreground)];
}
@utility bg-muted {
	@apply bg-[var(--muted)];
}
@utility text-secondary-text {
	@apply text-[var(--secondary-text)];
}

/* Apply base styles */
@layer base {
	body {
		/* Use @apply with the defined utilities */
		@apply bg-background text-foreground;
		/* Add smooth scrolling */
		scroll-behavior: smooth;
		/* Improve font rendering */
		-webkit-font-smoothing: antialiased;
		-moz-osx-font-smoothing: grayscale;
	}

	/* Control color transitions */
	:root {
		/* Add a smooth transition for colors by default */
		transition:
			background-color 0.2s ease,
			color 0.2s ease,
			border-color 0.2s ease;
	}

	/* Class to pause color transitions during initial load */
	.color-transition-paused {
		/* Immediately apply colors without transition */
		transition: none !important;
	}

	/* Basic heading styles */
	h1,
	h2,
	h3,
	h4,
	h5,
	h6 {
		@apply font-semibold tracking-tight;
	}

	h1 {
		font-size: theme('fontSize.4xl');
	}
	h2 {
		font-size: theme('fontSize.3xl');
	}
	h3 {
		font-size: theme('fontSize.2xl');
	}
	h4 {
		font-size: theme('fontSize.xl');
	}
	h5 {
		font-size: theme('fontSize.lg');
	}
	h6 {
		font-size: theme('fontSize.base');
	}

	/* Basic link styles */
	a {
		/* Use @apply with the defined utility */
		@apply text-primary underline-offset-4;
		text-decoration-line: none; /* Start with no underline */
	}

	a:hover {
		@apply underline;
	}
}

/* Keep existing utilities or add new ones */
@layer utilities {
	/* All custom utility classes removed as they were unused in provided files */
}
